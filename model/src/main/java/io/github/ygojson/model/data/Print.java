package io.github.ygojson.model.data;

import java.util.Objects;
import java.util.UUID;

import com.fasterxml.jackson.annotation.*;
import jakarta.validation.constraints.Pattern;

import io.github.ygojson.model.data.definition.localization.Language;
import io.github.ygojson.model.data.property.IdProperties;
import io.github.ygojson.model.data.property.LanguageProperties;
import io.github.ygojson.model.data.property.PrintProperties;

/**
 * Model describing the properties of a Print (atomic).
 */
@JsonClassDescription(
	"""
		Describes the information for a print.

		This model contains the properties of the printed card that will not be common to all of them."""
)
@JsonPropertyOrder(
	{
		IdProperties.SELF_ID,
		IdProperties.CARD_ID,
		IdProperties.SET_ID,
		PrintProperties.SET_CODE,
		PrintProperties.REGION_CODE,
		PrintProperties.SET_NUMBER,
		PrintProperties.FIRST_SERIES_SET,
		PrintProperties.RARITY,
		LanguageProperties.LANGUAGE,
	}
)
public class Print {

	private UUID id;
	private UUID cardId;
	private UUID setId;
	private String setCode;
	private String regionCode;
	private String setNumber;
	private String firstSeriesSet;
	private String rarity;
	private Language language;

	/**
	 * UUID (v5) for the Print (atomic) generated by YGOJSON.
	 */
	@JsonPropertyDescription(
		"UID (v5) for the Print (atomic) generated by YGOJSON."
	)
	@JsonProperty(value = IdProperties.SELF_ID, required = true)
	@JsonInclude(JsonInclude.Include.ALWAYS)
	public UUID getId() {
		return id;
	}

	/**
	 * UUID (v5) generated by YGOJSON of the card that is associated to this print.
	 * </br>
	 * This associates the print with the {@link Card}.
	 *
	 * @see Card#getId()
	 */
	@JsonPropertyDescription(
		"UID (v5) for the Card (atomic) associated with this print (generated by YGOJSON)."
	)
	@JsonProperty(value = IdProperties.CARD_ID, required = true)
	@JsonInclude(JsonInclude.Include.ALWAYS)
	public UUID getCardId() {
		return cardId;
	}

	/**
	 * UUID (v5) generated by YGOJSON of the set that is associated to this print.
	 * </br>
	 * This associates the print with the {@link Set}.
	 *
	 * @see Set#getId()
	 */
	@JsonPropertyDescription(
		"UID (v5) for the Set (atomic) associated with this print (generated by YGOJSON)."
	)
	@JsonProperty(value = IdProperties.SET_ID, required = true)
	@JsonInclude(JsonInclude.Include.ALWAYS)
	public UUID getSetId() {
		return setId;
	}

	/**
	 * Set code associated with this print.
	 * </br>
	 * Together with the {@link #getRegionCode()} and {@link #getSetNumber()} generates the full print-code.
	 * </br>
	 * This property might differ from the {@link Set#getPrefix()} associated for this
	 * print, as set-codes are often localized.
	 */
	@JsonPropertyDescription(
		"""
			Set code associated with this print.

			This property might differ with the prefix on the Set Model as the print-codes are often localized."""
	)
	@JsonProperty(value = PrintProperties.SET_CODE)
	@JsonInclude(JsonInclude.Include.NON_EMPTY)
	@Pattern(regexp = "[a-zA-Z0-9]+")
	public String getSetCode() {
		return setCode;
	}

	/**
	 * Set prefix associated with this print.
	 * </br>
	 * Together with the {@link #getSetCode()} and {@link #getSetNumber()} generates the full print-code.
	 * </br>
	 * This property might differ from the {@link Print#getLanguage()} associated for this
	 * print, as the same language can be printed in different regions.
	 */
	@JsonPropertyDescription(
		"""
			Region code associated with this print.

			This property might differ with the language property, as the same language can be printed in different regions."""
	)
	@JsonProperty(value = PrintProperties.REGION_CODE)
	@JsonInclude(JsonInclude.Include.NON_EMPTY)
	@Pattern(regexp = "[a-zA-Z0-9]+")
	public String getRegionCode() {
		return regionCode;
	}

	/**
	 * Number of the print within the set.
	 * </br>
	 * Together with the {@link #getRegionCode()}and {@link #getSetNumber()} generates the full print-code.
	 * </br>
	 * Although this property is usually a numeric with left-padded zeroes,
	 * there are few cases where a letter is at the end (i.e., "K-Series").
	 */
	@JsonPropertyDescription(
		"""
			Number of the print within the set.

			It is represented as a string with left-padded zeroes, although sometimes might contain a letter."""
	)
	@JsonProperty(value = PrintProperties.SET_NUMBER)
	@JsonInclude(JsonInclude.Include.NON_EMPTY)
	@Pattern(regexp = "[0-9]+")
	public String getSetNumber() {
		return setNumber;
	}

	/**
	 * Set for prints on the Series 1 sets (where the full print number was not present).
	 */
	@JsonPropertyDescription(
		"""
			Series 1 set.

			Note that this indicates that the print does not contain a print code number properties."""
	)
	@JsonProperty(value = PrintProperties.FIRST_SERIES_SET)
	@JsonInclude(JsonInclude.Include.NON_EMPTY)
	public String getFirstSeriesSet() {
		return firstSeriesSet;
	}

	/**
	 * Rarity of the print (lower-case).
	 * </br>
	 * The rarity of the card print.
	 */
	@JsonPropertyDescription("Rarity of the print")
	@JsonProperty(value = PrintProperties.RARITY)
	@JsonInclude(JsonInclude.Include.NON_EMPTY)
	@Pattern(regexp = "[a-z]+")
	public String getRarity() {
		return rarity;
	}

	/**
	 * Language of the print.
	 * </br>
	 * Note that it might differ from the region code.
	 */
	@JsonPropertyDescription(
		"Language of the print.\nNote that it might differ from the region code."
	)
	@JsonProperty(value = LanguageProperties.LANGUAGE)
	@JsonInclude(JsonInclude.Include.NON_EMPTY)
	public Language getLanguage() {
		return language;
	}

	public void setId(UUID id) {
		this.id = id;
	}

	public void setCardId(UUID cardId) {
		this.cardId = cardId;
	}

	public void setSetId(UUID setId) {
		this.setId = setId;
	}

	public void setSetCode(String setCode) {
		this.setCode = setCode;
	}

	public void setRegionCode(String regionCode) {
		this.regionCode = regionCode;
	}

	public void setSetNumber(String setNumber) {
		this.setNumber = setNumber;
	}

	public void setFirstSeriesSet(String firstSeriesSet) {
		this.firstSeriesSet = firstSeriesSet;
	}

	public void setRarity(String rarity) {
		this.rarity = rarity;
	}

	public void setLanguage(Language language) {
		this.language = language;
	}

	@Override
	public boolean equals(Object o) {
		if (this == o) return true;
		if (!(o instanceof Print print)) return false;
		return (
			Objects.equals(id, print.id) &&
			Objects.equals(cardId, print.cardId) &&
			Objects.equals(setId, print.setId) &&
			Objects.equals(setCode, print.setCode) &&
			Objects.equals(regionCode, print.regionCode) &&
			Objects.equals(setNumber, print.setNumber) &&
			Objects.equals(rarity, print.rarity) &&
			language == print.language
		);
	}

	@Override
	public int hashCode() {
		return Objects.hash(
			id,
			cardId,
			setId,
			setCode,
			regionCode,
			setNumber,
			rarity,
			language
		);
	}
}
